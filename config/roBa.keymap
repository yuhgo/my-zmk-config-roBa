#define ZMK_POINTING_DEFAULT_MOVE_VAL 4000

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&mmv { time-to-max-speed-ms = <40>; };

&msc { time-to-max-speed-ms = <40>; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <1 2>;
        };

        shift-z {
            bindings = <&kp LS(Z)>;
            key-positions = <22 23>;
        };

        lang_en {
            bindings = <&kp LANG2>;
            key-positions = <>;
        };

        lang_ja {
            bindings = <&kp LANG1>;
            key-positions = <>;
        };

        backspace-1 {
            bindings = <&kp BACKSPACE>;
            key-positions = <12 13>;
        };

        enter_1 {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
        };

        backspace_2 {
            bindings = <&kp BACKSPACE>;
            key-positions = <13 38>;
        };

        enter_2 {
            bindings = <&kp ENTER>;
            key-positions = <18 41>;
        };

        to_window_layer {
            bindings = <&mo 7>;
            key-positions = <6 7 8>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(NUMBER_5))>;
            label = "SCREENSHOT";
        };

        master_p: master_p {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp J &kp F &kp J &kp F &kp H &kp G &kp H &kp G &kp UNDER &kp Y &kp U &kp H &kp G &kp O &kp UNDER &kp N0 &kp N9 &kp N0 &kp N7 &kp UNDER &kp N2 &kp N5 &kp N2 &kp N5>;
            label = "MASTER_P";
        };

        mac_p: mac_p {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp J &kp F &kp J &kp F &kp H &kp G &kp H &kp G>;
            label = "MAC_P";
        };

        presentify: presentify {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LC(LG(O))))>;
            label = "PRESENTIFY";
        };

        browser_back: browser_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT)>;
            label = "BROWSER_BACK";
        };

        browser_next: browser_next {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(RIGHT)>;
            label = "BROWSER_NEXT";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        double_shift: double_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "DOUBLE_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Z>, <&kp Z>;
        };

        layer3_backspace_td: layer3_backspace_td {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER3_BACKSPACE_TD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt 3 NONE>, <&kp BACKSPACE>;
        };

        tab_enter_td: tab_enter_td {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ENTER_TD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TAB>, <&kp ENTER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_0 {
            bindings = <
&kp Q             &kp W         &kp E             &kp R        &kp T                                        &kp Y        &kp U  &kp I      &kp O      &kp P
&mt LCTRL A       &kp S         &kp D             &kp F        &kp G        &kp BACKSPACE        &kp ENTER  &kp H        &kp J  &kp K      &lt 5 L    &kp DELETE
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V        &kp B        &kp TAB              &trans     &kp N        &kp M  &mkp LCLK  &mkp RCLK  &mt LEFT_SHIFT SLASH
&kp LCTRL         &kp LEFT_ALT  &mt LEFT_WIN ESC  &lt 1 LANG2  &lt 2 SPACE  &lt 3 BACKSPACE      &lt 3 TAB  &lt 6 LANG1                               &kp TAB
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Symbol_1 {
            bindings = <
&kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp EXCL    &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS                                &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp PLUS   &kp AMPERSAND  &kp PERCENT
&kp AT_SIGN       &kp SEMICOLON      &kp DOLLAR  &trans            &none                 &kp ASTERISK       &kp CARET  &kp HASH               &kp SLASH          &kp PIPE   &kp BACKSLASH  &kp AMPERSAND
&kp LEFT_SHIFT    &trans             &kp COLON   &kp COMMA         &kp MINUS             &kp AMPERSAND      &kp GRAVE  &kp EQUAL              &kp PERIOD         &kp MINUS  &trans         &none
&trans            &trans             &trans      &trans            &trans                &trans             &trans     &kp LG(SPACE)                                                       &none
            >;
        };

        Arrow_2 {
            bindings = <
&none           &none         &none         &none          &none                               &none     &none     &none         &none      &none
&kp LG(LEFT)    &none         &none         &kp LG(RIGHT)  &none   &presentify      &mac_p     &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &none
&kp LEFT_SHIFT  &none         &none         &none          &none   &screenshot      &master_p  &none     &none     &none         &none      &none
&kp LCTRL       &kp LEFT_ALT  &kp LEFT_WIN  &trans         &trans  &trans           &trans     &trans                                       &none
            >;
        };

        FN_NUM_3 {
            bindings = <
&trans          &kp F7        &kp F8        &kp F9  &kp F10                                   &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans
&kp LCTRL       &kp F4        &kp F5        &kp F6  &kp F1   &trans             &trans        &trans        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans
&kp LEFT_SHIFT  &kp F1        &kp F2        &kp F3  &kp F12  &kp LG(MINUS)      &kp LG(PLUS)  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&kp LCTRL       &kp LEFT_ALT  &kp LEFT_WIN  &trans  &trans   &trans             &trans        &trans                                                  &trans
            >;
        };

        MOUSE_4 {
            bindings = <
&kp Q             &kp W         &kp E             &kp R                   &kp T                                             &kp Y        &kp U  &kp I      &kp O      &kp P
&mt LCTRL A       &kp S         &kp D             &kp F                   &kp G        &kp BACKSPACE      &kp ENTER         &kp H        &kp J  &kp K      &kp L      &kp DELETE
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V                   &kp B        &kp TAB            &trans            &kp N        &kp M  &mkp LCLK  &mkp RCLK  &kp QUESTION
&kp LCTRL         &kp LEFT_ALT  &mt LEFT_WIN ESC  &lt_to_layer_0 1 LANG2  &lt 2 SPACE  &mo 3              &lt 5 LEFT_SHIFT  &lt 5 LANG1                               &kp TAB
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL_5 {
            bindings = <
&trans          &trans        &trans        &trans          &trans                      &trans        &trans        &trans            &trans         &trans
&kp LCTRL       &trans        &msc SCRL_UP  &msc SCRL_DOWN  &trans  &trans      &trans  &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP_ARROW)  &kp LC(RIGHT)  &trans
&kp LEFT_SHIFT  &trans        &trans        &trans          &trans  &trans      &trans  &trans        &none         &mkp LCLK         &mkp RCLK      &trans
&kp LCTRL       &kp LEFT_ALT  &kp LEFT_WIN  &trans          &trans  &trans      &trans  &trans                                                       &trans
            >;
        };

        util_6 {
            bindings = <
&trans  &kp C_BRIGHTNESS_DEC  &trans      &kp C_BRIGHTNESS_INC  &trans                                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3   &bt BT_SEL 4
&trans  &kp C_VOLUME_DOWN     &kp K_MUTE  &kp C_VOL_UP          &trans  &mkp MCLK      &browser_back  &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP_ARROW)  &kp LC(RIGHT)  &browser_next
&trans  &trans                &none       &trans                &trans  &trans         &none          &trans        &trans        &trans            &trans         &bt BT_CLR
&trans  &trans                &trans      &trans                &trans  &trans         &trans         &trans                                                       &bt BT_CLR_ALL
            >;
        };

        WINDOW_7 {
            bindings = <
&trans             &trans             &kp LS(LA(LG(E)))  &kp LS(LA(LG(R)))  &trans                                            &trans  &trans  &trans  &trans  &trans
&kp LS(LG(LA(A)))  &kp LS(LA(LG(S)))  &kp LS(LA(LG(D)))  &kp LS(LA(LG(F)))  &kp LS(LA(LG(G)))  &kp LS(LA(LG(H)))      &trans  &trans  &trans  &trans  &trans  &trans
&trans             &trans             &trans             &trans             &trans             &trans                 &trans  &trans  &trans  &trans  &trans  &trans
&trans             &trans             &trans             &trans             &trans             &trans                 &trans  &trans                          &trans
            >;
        };
    };
};
